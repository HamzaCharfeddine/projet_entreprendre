{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Downloads\\\\Projet Entreprendre\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { SecurityScoreIndicator } from './components/SecurityScanner/SecurityScoreIndicator';\nimport { RiskCategories } from './components/SecurityScanner/RiskCategories';\nimport { ScanningProgress } from './components/SecurityScanner/ScanningProgress';\nimport { ScanSelection } from './components/SecurityScanner/ScanSelection';\nimport { scanningMessages } from './constants/scanningMessages';\nimport { vulnerabilities } from './constants/mockData';\nimport { styles } from './components/SecurityScanner/styles';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n  const [stage, setStage] = useState('selection');\n  const [scanTokens, setScanTokens] = useState(5);\n  const [scanProgress, setScanProgress] = useState(0);\n  const [scanningMessage, setScanningMessage] = useState('');\n  const [selectedType, setSelectedType] = useState('');\n  const [inputUrl, setInputUrl] = useState('');\n  const securityScore = 75;\n  const [expandedRiskCategory, setExpandedRiskCategory] = useState(null);\n  useEffect(() => {\n    let progressInterval;\n    let messageInterval;\n    if (stage === 'scanning') {\n      let progress = 0;\n      let messageIndex = 0;\n      progressInterval = setInterval(() => {\n        progress += 3;\n        setScanProgress(progress);\n        if (progress >= 100) {\n          clearInterval(progressInterval);\n          clearInterval(messageInterval);\n          setStage('results');\n        }\n      }, 500);\n      messageInterval = setInterval(() => {\n        if (messageIndex < scanningMessages.length) {\n          setScanningMessage(scanningMessages[messageIndex]);\n          messageIndex++;\n        }\n      }, 1000);\n    }\n    return () => {\n      if (progressInterval) clearInterval(progressInterval);\n      if (messageInterval) clearInterval(messageInterval);\n    };\n  }, [stage]);\n  const handleStartScan = () => {\n    if (scanTokens > 0) {\n      setScanTokens(prev => prev - 1);\n      setStage('scanning');\n    } else {\n      alert('No scan tokens remaining. Please upgrade.');\n    }\n  };\n  if (stage === 'selection') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.container,\n      children: /*#__PURE__*/_jsxDEV(ScanSelection, {\n        scanTokens: scanTokens,\n        selectedType: selectedType,\n        setSelectedType: setSelectedType,\n        inputUrl: inputUrl,\n        setInputUrl: setInputUrl,\n        handleStartScan: handleStartScan\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n  if (stage === 'scanning') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.container,\n      children: /*#__PURE__*/_jsxDEV(ScanningProgress, {\n        progress: scanProgress,\n        message: scanningMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      maxWidth: '800px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: '#1e40af'\n        },\n        children: \"Security Scan Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setStage('selection');\n          setExpandedRiskCategory(null);\n        },\n        style: styles.button,\n        children: \"New Scan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(SecurityScoreIndicator, {\n        score: securityScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RiskCategories, {\n      vulnerabilities: vulnerabilities,\n      expandedRiskCategory: expandedRiskCategory,\n      setExpandedRiskCategory: setExpandedRiskCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"GHrs8YJCrSfmvRNHKG/f1yo4r4w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SecurityScoreIndicator","RiskCategories","ScanningProgress","ScanSelection","scanningMessages","vulnerabilities","styles","jsxDEV","_jsxDEV","App","_s","stage","setStage","scanTokens","setScanTokens","scanProgress","setScanProgress","scanningMessage","setScanningMessage","selectedType","setSelectedType","inputUrl","setInputUrl","securityScore","expandedRiskCategory","setExpandedRiskCategory","progressInterval","messageInterval","progress","messageIndex","setInterval","clearInterval","length","handleStartScan","prev","alert","style","container","children","fileName","_jsxFileName","lineNumber","columnNumber","message","padding","maxWidth","margin","display","justifyContent","alignItems","marginBottom","color","onClick","button","score","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Downloads/Projet Entreprendre/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { SecurityScoreIndicator } from './components/SecurityScanner/SecurityScoreIndicator';\nimport { RiskCategories } from './components/SecurityScanner/RiskCategories';\nimport { ScanningProgress } from './components/SecurityScanner/ScanningProgress';\nimport { ScanSelection } from './components/SecurityScanner/ScanSelection';\nimport { scanningMessages } from './constants/scanningMessages';\nimport { vulnerabilities } from './constants/mockData';\nimport { styles } from './components/SecurityScanner/styles';\nimport './style.css';\n\nexport function App() {\n    const [stage, setStage] = useState('selection');\n    const [scanTokens, setScanTokens] = useState(5);\n    const [scanProgress, setScanProgress] = useState(0);\n    const [scanningMessage, setScanningMessage] = useState('');\n    const [selectedType, setSelectedType] = useState('');\n    const [inputUrl, setInputUrl] = useState('');\n    const securityScore = 75;\n    const [expandedRiskCategory, setExpandedRiskCategory] = useState(null);\n\n    useEffect(() => {\n        let progressInterval;\n        let messageInterval;\n\n        if (stage === 'scanning') {\n            let progress = 0;\n            let messageIndex = 0;\n\n            progressInterval = setInterval(() => {\n                progress += 3;\n                setScanProgress(progress);\n\n                if (progress >= 100) {\n                    clearInterval(progressInterval);\n                    clearInterval(messageInterval);\n                    setStage('results');\n                }\n            }, 500);\n\n            messageInterval = setInterval(() => {\n                if (messageIndex < scanningMessages.length) {\n                    setScanningMessage(scanningMessages[messageIndex]);\n                    messageIndex++;\n                }\n            }, 1000);\n        }\n\n        return () => {\n            if (progressInterval) clearInterval(progressInterval);\n            if (messageInterval) clearInterval(messageInterval);\n        };\n    }, [stage]);\n\n    const handleStartScan = () => {\n        if (scanTokens > 0) {\n            setScanTokens(prev => prev - 1);\n            setStage('scanning');\n        } else {\n            alert('No scan tokens remaining. Please upgrade.');\n        }\n    };\n\n    if (stage === 'selection') {\n        return (\n            <div style={styles.container}>\n                <ScanSelection\n                    scanTokens={scanTokens}\n                    selectedType={selectedType}\n                    setSelectedType={setSelectedType}\n                    inputUrl={inputUrl}\n                    setInputUrl={setInputUrl}\n                    handleStartScan={handleStartScan}\n                />\n            </div>\n        );\n    }\n\n    if (stage === 'scanning') {\n        return (\n            <div style={styles.container}>\n                <ScanningProgress progress={scanProgress} message={scanningMessage} />\n            </div>\n        );\n    }\n\n    return (\n        <div style={{ padding: '20px', maxWidth: '800px', margin: '0 auto' }}>\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    marginBottom: '20px',\n                }}\n            >\n                <h1 style={{ color: '#1e40af' }}>Security Scan Results</h1>\n                <button\n                    onClick={() => {\n                        setStage('selection');\n                        setExpandedRiskCategory(null);\n                    }}\n                    style={styles.button}\n                >\n                    New Scan\n                </button>\n            </div>\n\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginBottom: '20px',\n                }}\n            >\n                <SecurityScoreIndicator score={securityScore} />\n            </div>\n\n            <RiskCategories\n                vulnerabilities={vulnerabilities}\n                expandedRiskCategory={expandedRiskCategory}\n                setExpandedRiskCategory={setExpandedRiskCategory}\n            />\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}